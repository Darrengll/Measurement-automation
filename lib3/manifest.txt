This file contains statements that make a foundation of a new version of
library lib3.
New library version written from scratch + copypastes from production
version of `lib2`.

lib3 is mainly orieneted to be an API for quantum computing
calibrations/measurements/experiments/operations with
superconducting qubits (mostly transmons) in resonator+qubit (dispersive
readout) topology.

------------------------------------------------------------
Main statements:
1. All code has to comply with most recent PEP standards.
2. Every function is documented and comply with `numpy` library docstring
formaat.
3. Every measurement class has minimal working example attached as a code in
module containing this class. External link to file with measurement schematic
necessary to execute minimal working example has to be attached as well.
4. NO BACKWARD COMPATIBILITY with previous library versions.
5. Single module contains at most 2 classes. The second class can be contained
if and only if module is associated with some measuremnet and the second class
inherits `MeasurementResult` for experiment result data visualization.
6. API has to allow optionally reload all modules required to
refresh the new measurement class instance to ensure all lib3
changes took place immediately. To suuport such functionality packages must not
 have circular dependencies (i.e. module A imports from B and vice-versa).

--------------------------------------------------------------
### Physical units convention ###
time - nanoseconds
frequency - [Hz]
voltage - Volts [V]
power - [dBm] = 20*log10(P/1mW), where P - power in mW, mW = 1e-3 Watt
angle - radiances [rad]
resistance - Ohms [Ohm]

All numbering (e.g. AWG channels enumeration) begins at 0.
--------------------------------------------------------------
### Packages structure ###
The following package structure is proposed:
lib3/
    core/ - consists of Measurement and MeasurementResult. Context classes.
    Data save-load routines and so on.
    resonators/ - finding and fitting resonators
    mixers/ - package that regulates low level mixer-based schemes calibrations
    qchar/ - all necessary measurements that are required to characterize
        different physical aspects of a single qubit
        (no single-qubit operations).
        cw/ - STS/TTS/AC-stark and other CW measurements. TTS spectra fit.
            Couplings estimation based on fits. Qubit transitions frequencies.
        td/ - time-domain measurementsRabi/Ramsey and other pulsed measuremnets
            that results in lifetime estimation of a qubits. As well as
            pi-pulses calibration. CPMG sequences and more.
            Coupling estimation based on dynamics measurements.
    qinf/ - quantum informatics experiments.
        gates/ - consist of gates implementation
        tomo/ - tomography processes. May consist of several submodules.
-------------------------------------------------------------------------------
### Styling reminders ###
1. Follow all corrections suggested by pycharm IDE.

I. package import
    Imports should always be written at the top of the file,
    after any module comments and docstrings.

    Imports should be divided according to what is being imported.
    There are generally three groups:

    1.standard library imports (Pythonâ€™s built-in modules)
    2.related third party imports (modules that are installed and do not belong
     to the current application)
    3. local application imports (modules that belong to the current
    application)

    Each group of imports should be separated by a blank space.
    PEP 8 explicitly recommends absolute imports.
-------------------------------------------------------------------------------
### Tasks list ###
02.05.2021
1. Measure TTS with vna (Agilent_PNA_L) and SC5502A
2. Measure TTS with vna (DacAdcVna) and SC5502A
3. Measure Rabi from pulse duration for Q0.
